"""
Django settings for DjangoVue project.

Generated by 'django-admin startproject' using Django 1.11.16.

For more information on this file, see
https://docs.djangoproject.com/en/1.11/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.11/ref/settings/
"""

import os
import datetime

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))

############-----将创建的apps 和 extra_apps加入到项目变量------#########
import sys

sys.path.insert(0, BASE_DIR)
sys.path.insert(0, os.path.join(BASE_DIR, 'apps'))
sys.path.insert(0, os.path.join(BASE_DIR, 'extra_apps'))
###################################################################


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/1.11/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = '&_m^0(kujg#)&w%h5r1d=l^xs==b11^opmf=-++tyru%)aex_g'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['*', ]
# 配置django登录方式---原方式只能使用用户名和密码的方式,可以添加手机号或者邮箱的方式
AUTHENTICATION_BACKENDS = ('users.views.CoustomBankends',)

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'DjangoUeditor',
    'users.apps.UsersConfig',
    'goods.apps.GoodsConfig',
    'trade.apps.TradeConfig',
    'user_operation.apps.UserOperationConfig',
    'crispy_forms',  # xadmin需要的
    'xadmin',
    'django_filters',
    'rest_framework',
    'corsheaders',
    'import_export',
    'reversion',
    # 前后端分离项目时候rest_framework的token来认证,添加到app是因为这个功能会在数据库生成表格
    'rest_framework.authtoken',
    'ckeditor',
    'ckeditor_uploader',

]

MIDDLEWARE = [
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]
CORS_ORIGIN_ALLOW_ALL = True
ROOT_URLCONF = 'DjangoVue.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')]
        ,
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'DjangoVue.wsgi.application'

# Database
# https://docs.djangoproject.com/en/1.11/ref/settings/#databases
"""
DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
    }
}
"""
DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': "django_vue_shop",
        'USER': "username",
        'PASSWORD': "password",
        'HOST': "127.0.0.1",
        'OPTIONS': {'init_command': 'SET default_storage_engine=INNODB;'}
    }
}

# Password validation
# https://docs.djangoproject.com/en/1.11/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# Internationalization
# https://docs.djangoproject.com/en/1.11/topics/i18n/

LANGUAGE_CODE = 'zh-hans'

TIME_ZONE = 'Asia/Shanghai'

USE_I18N = True

USE_L10N = True

USE_TZ = False

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/1.11/howto/static-files/

STATIC_URL = '/static/'
STATICFILES_DIRS = [
    os.path.join(BASE_DIR, "static"),
]

# UserProfile

AUTH_USER_MODEL = 'users.UserProfile'

# 配置media    MEDIA_URL   MEDIA_ROOT 配置完成之后还需要配置urls.py
MEDIA_URL = '/media/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')

# django_rest_framework的配置
REST_FRAMEWORK = {
    # 配置进行登录注册认证的方式  基于BasicAuthentication和SessionAuthentication
    'DEFAULT_AUTHENTICATION_CLASSES': (
        'rest_framework.authentication.BasicAuthentication',
        'rest_framework.authentication.SessionAuthentication',

    ),  # 使用drf自带的限速配置
    'DEFAULT_THROTTLE_CLASSES': (
        # 非登录
        'rest_framework.throttling.AnonRateThrottle',
        # 已登录用户
        'rest_framework.throttling.UserRateThrottle'
    ),  # 规则
    'DEFAULT_THROTTLE_RATES': {
        'anon': '100/day',
        'user': '1000/day'
    }
}
# jwt相关的设置
JWT_AUTH = {
    # 配置jwt令牌的过期时间seconds=300  day=7 minutes  hours  weeks  等都可设置
    'JWT_EXPIRATION_DELTA': datetime.timedelta(days=1),
    # 可以自定义JWT,设置header的时候需要JWT+xxxx,这个JWT可以被自定义
    # 'JWT_AUTH_HEADER_PREFIX': 'JWT',
}

#  手机号码验证规则
MOBILE_REGSTER = '^((13[0-9])|(14[5,7])|(15[0-3,5-9])|(17[0,3,5-8])|(18[0-9])|166|198|199|(147))\\d{8}$'

# 手机验证码请求--云片网
API_KEY = 'xxxxxxxxxxxxxxxxxxx'

# CKeuidtor
CKEDITOR_UPLOAD_PATH = 'upload/'
CKEDITOR_CONFIGS = {
    'default': {
        'toolbar': 'full',
        'height': 1000,
        'width': 850,
    },
}

# 支付宝配置
# 支付宝秘钥相关配置
rsa_private_key_path = os.path.join(BASE_DIR, 'tread/rsa_key/rsa_private_key.pem')
rsa_aliy_key_path = os.path.join(BASE_DIR, 'tread/rsa_key/rsa_aliy_key.pem')
APP_ID = "2016092300576886"
app_notify_url = "http://132.232.238.136:8000/alipay/return/"
return_url = "http://132.232.238.136:8000/alipay/return/"

# drf缓存过期时间
REST_FRAMEWORK_EXTENSIONS = {
    # 设置为60s
    'DEFAULT_CACHE_RESPONSE_TIMEOUT': 20
}

# 使用redis处理缓存
CACHES = {
    "default": {
        "BACKEND": "django_redis.cache.RedisCache",
        "LOCATION": "redis://127.0.0.1:6379/1",
        "OPTIONS": {
            "CLIENT_CLASS": "django_redis.client.DefaultClient",
        }
    }
}
